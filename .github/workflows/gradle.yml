name: Build MarkovBaj Backend + Frontend

on:
    push:
        branches: [ "main", "ci-test" ]
    pull_request:
        branches: [ "main", "ci-test" ]

jobs:
    build:

        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  java-version: '17'
                  distribution: 'temurin'
            - name: Get Release Version
              id: get_version
              run: VERSION=$(gradle properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}') && echo VERSION=$VERSION >> $GITHUB_OUTPUT
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: MarkovBaj-${{ steps.get_version.outputs.VERSION }}
                  release_name: MarkovBaj ${{ steps.get_version.outputs.VERSION }}
                  draft: false
                  prerelease: false
            - name: Build Backend
              uses: gradle/gradle-build-action@v2
              with:
                arguments: shadowJar
            - name: Build Frontend Resources
              uses: gradle/gradle-build-action@v2
              with:
                arguments: jsBrowserProductionExecutableDistributeResources
            - name: Build Frontend JS
              uses: gradle/gradle-build-action@v2
              with:
                arguments: jsBrowserProductionWebpack
            - name: Upload Backend Jar
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./build/libs/MarkovBaj-${{ steps.get_version.outputs.VERSION }}-all.jar
                  asset_name: MarkovBaj-Backend-${{ steps.get_version.outputs.VERSION }}.jar
                  asset_content_type: application/octet-stream
            - name: Zip Frontend
              uses: vimtor/action-zip@v1
              with:
                files: build/distributions/
                dest: frontend.zip
            - name: Upload Frontend Zip
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: ./frontend.zip
                asset_name: MarkovBaj-Frontend-${{ steps.get_version.outputs.VERSION }}.zip
                asset_content_type: application/octet-stream